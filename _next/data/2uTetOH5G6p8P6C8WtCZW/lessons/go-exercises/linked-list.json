{"pageProps":{"post":{"attributes":{"description":"Fundamentals of the Go programming language.","title":"Singly Linked List","keywords":["Software engineering","Go"]},"html":"<h2>Exercise: Singly Linked List</h2>\n<h3>Instructions</h3>\n<p>One basic data structure used in many cases in the linked list.  One special case of this data structure is the &quot;singly linked list&quot; data structure.  In this exercise, we will build a simplified singly linked list data structure in Go, with the following functionalities:</p>\n<ul>\n<li><code>InsertLast</code> - inserts a new node at the end of the list.</li>\n<li><code>DeleteLast</code> - deletes the last node from the list.</li>\n<li><code>Display</code> - prints the list from beginning to end.</li>\n</ul>\n<p>The linked list should accept a data of type <code>string</code>, e.g. <code>InsertLast(data string)</code>.</p>\n</br>\n\n<p>Using it should look something like this:</p>\n<pre><code class=\"hljs language-go\">list := SinglyLinkedList{}\n\nlist.InsertLast(<span class=\"hljs-string\">&quot;Hello&quot;</span>)\nlist.InsertLast(<span class=\"hljs-string\">&quot;My&quot;</span>)\nlist.InsertLast(<span class=\"hljs-string\">&quot;World&quot;</span>)\nlist.InsertLast(<span class=\"hljs-string\">&quot;!&quot;</span>)\n\nlist.Display()\n</code></pre></br>\n\n<p>When displaying the list, print the data of each node—e.g. output might look like this:</p>\n<pre><code class=\"hljs language-plaintext\">&quot;Hello&quot; -&gt; &quot;My&quot; -&gt; &quot;World&quot; -&gt; &quot;!&quot;\n</code></pre></br>\n\n<h3>Extra (optional) — Implement one or more of the following methods</h3>\n<ul>\n<li><code>InsertFirst</code> - inserts a new node at the beginning of the list.</li>\n<li><code>DeleteFirst</code> - deletes the first node from the list.</li>\n<li><code>InsertAt</code> - inserts a new node at a given position.</li>\n<li><code>DeleteAt</code> - deletes a node at a given position.</li>\n<li><code>Reverse</code> - reverses the list.</li>\n</ul>\n</br>\n\n<blockquote>\n<p><strong>More information:</strong> </p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Linked_list\">https://en.wikipedia.org/wiki/Linked_list</a></li>\n<li><a href=\"https://www.wscubetech.com/resources/dsa/singly-linked-list-data-structure\">https://www.wscubetech.com/resources/dsa/singly-linked-list-data-structure</a></li>\n</ul>\n</blockquote>\n</br>\n","markdown":"\n## Exercise: Singly Linked List\n\n### Instructions\n\nOne basic data structure used in many cases in the linked list.  One special case of this data structure is the \"singly linked list\" data structure.  In this exercise, we will build a simplified singly linked list data structure in Go, with the following functionalities:\n\n* `InsertLast` - inserts a new node at the end of the list.\n* `DeleteLast` - deletes the last node from the list.\n* `Display` - prints the list from beginning to end.\n\nThe linked list should accept a data of type `string`, e.g. `InsertLast(data string)`.\n\n</br>\n\nUsing it should look something like this:\n  \n```go\nlist := SinglyLinkedList{}\n\nlist.InsertLast(\"Hello\")\nlist.InsertLast(\"My\")\nlist.InsertLast(\"World\")\nlist.InsertLast(\"!\")\n\nlist.Display()\n```\n\n</br>\n\nWhen displaying the list, print the data of each node—e.g. output might look like this:\n\n```plaintext\n\"Hello\" -> \"My\" -> \"World\" -> \"!\"\n```\n\n</br>\n\n### Extra (optional) — Implement one or more of the following methods\n\n* `InsertFirst` - inserts a new node at the beginning of the list.\n* `DeleteFirst` - deletes the first node from the list.\n* `InsertAt` - inserts a new node at a given position.\n* `DeleteAt` - deletes a node at a given position.\n* `Reverse` - reverses the list.\n\n</br>\n\n> **More information:** \n> - https://en.wikipedia.org/wiki/Linked_list\n> - https://www.wscubetech.com/resources/dsa/singly-linked-list-data-structure\n\n</br>\n","slug":"linked-list","title":"Singly Linked List","section":"Go exercises","icon":"code","filePath":"/home/runner/work/itu-bds-sdse/itu-bds-sdse/lessons/05-go-exercises/A-linked-list.md","nextSlug":"/itu-bds-sdse/lessons/go-exercises/temperature-converter","prevSlug":"/itu-bds-sdse/lessons/golang-fundamentals/testing"}},"__N_SSG":true}