{"pageProps":{"post":{"attributes":{"description":"Fundamentals of the Go programming language.","title":"Pointers and references","keywords":["Software engineering","Go"]},"html":"<h2>Functions receiving references</h2>\n<p>By default, Go functions receive arguments <strong>by value</strong>.</p>\n<p>But you can pass a <strong>reference to a variable</strong> to a function. In this case, we need to receive a <strong>pointer</strong> instead of the value.</p>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<pre><code class=\"hljs language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">increment</span><span class=\"hljs-params\">(a *<span class=\"hljs-type\">int</span>)</span></span> {\n    *a++\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> {\n    <span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-number\">1</span>\n    increment(&amp;a)\n    fmt.Println(a)\n}\n</code></pre><pre><code class=\"hljs language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> {\n    <span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-keyword\">var</span> b = &amp;a\n    increment(b)\n    increment(&amp;a)\n    fmt.Println(a)\n}\n</code></pre></br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<p>We need to use the <code>*</code> operator to access the value of the pointer.</p>\n<p>To get the address of a variable, use the <code>&amp;</code> operator.</p>\n<blockquote>\n<p>We need to use pointers when functions need to modify the value of the argument.</p>\n</blockquote>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h2>TRY IT OUT</h2>\n<p><img src=\"../../images/rob-pike.png\" alt=\"Rob Pike\"></p>\n</br>\n\n<h3>Exercise: Printing pointer information</h3>\n<blockquote>\n<p>Let&#39;s try and print the address of the pointer and the value of the pointer in the above code example.</p>\n</blockquote>\n<!-- fmt.Println(\"The the pointer is %v and the value is %v\", pointer, *pointer) -->\n\n</br>\n</br>\n","markdown":"\n## Functions receiving references\n\nBy default, Go functions receive arguments **by value**.\n\nBut you can pass a **reference to a variable** to a function. In this case, we need to receive a **pointer** instead of the value.\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n```go\nfunc increment(a *int) {\n    *a++\n}\n\nfunc main() {\n    var a = 1\n    increment(&a)\n    fmt.Println(a)\n}\n```\n\n```go\nfunc main() {\n    var a = 1\n    var b = &a\n    increment(b)\n    increment(&a)\n    fmt.Println(a)\n}\n```\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\nWe need to use the `*` operator to access the value of the pointer.\n\nTo get the address of a variable, use the `&` operator.\n\n> We need to use pointers when functions need to modify the value of the argument.\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n## TRY IT OUT\n\n![Rob Pike](../../images/rob-pike.png)\n\n</br>\n\n### Exercise: Printing pointer information\n\n> Let's try and print the address of the pointer and the value of the pointer in the above code example.\n\n<!-- fmt.Println(\"The the pointer is %v and the value is %v\", pointer, *pointer) -->\n\n</br>\n</br>\n","slug":"pointers-and-references","title":"Pointers and references","section":"Go fundamentals","icon":"code","filePath":"/home/runner/work/itu-bds-sdse/itu-bds-sdse/lessons/04-golang-fundamentals/H-pointers-and-references.md","nextSlug":"/itu-bds-sdse/lessons/golang-fundamentals/panic-defer-recover-error-handling","prevSlug":"/itu-bds-sdse/lessons/golang-fundamentals/functions"}},"__N_SSG":true}