{"pageProps":{"post":{"attributes":{"description":"Fundamentals of the Go programming language.","title":"Goroutines","keywords":["Software engineering","Go"]},"html":"<h2>Goroutines</h2>\n<ul>\n<li><strong>goroutines</strong> are lightweight threads.</li>\n<li>A <strong>goroutine</strong> is created by invoking any function with a <code>go</code> prefix.</li>\n<li><code>go functionName()</code></li>\n</ul>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h2>Creating a <strong>goroutine</strong></h2>\n<p>To turn any function into a &quot;thread&quot;, e.g. a goroutine, add the <code>go</code> keyword before the function call.</p>\n<pre><code class=\"hljs language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">PrintMessage</span><span class=\"hljs-params\">(message <span class=\"hljs-type\">string</span>)</span></span> {\n    fmt.Println(message)\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> {\n    <span class=\"hljs-keyword\">go</span> PrintMessage(<span class=\"hljs-string\">&quot;Learning Go!&quot;</span>)\n    fmt.Println(<span class=\"hljs-string\">&quot;Goodbye!&quot;</span>)\n}\n</code></pre></br>\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h2>TRY IT OUT</h2>\n<p><img src=\"../../images/rob-pike.png\" alt=\"Rob Pike\"></p>\n</br>\n\n<h3>Exercise: Explore goroutines</h3>\n<blockquote>\n<p>Change the <code>PrintMessage</code> function to print a message 5 times.</p>\n</blockquote>\n<blockquote>\n<p>Print two additional messages in the <code>main</code> function using the <code>PrintMessage</code> function.</p>\n</blockquote>\n<blockquote>\n<p>Turn the calls to <code>PrintMessage</code> into goroutines.</p>\n</blockquote>\n</br>\n\n<blockquote>\n<p><strong>Question:</strong> What is the output?</p>\n</blockquote>\n<blockquote>\n<p><strong>Consider:</strong> How do you know when each goroutine has finished?</p>\n</blockquote>\n</br>\n</br>\n","markdown":"\n## Goroutines\n\n* **goroutines** are lightweight threads.\n* A **goroutine** is created by invoking any function with a `go` prefix.\n* `go functionName()`\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n## Creating a **goroutine**\n\nTo turn any function into a \"thread\", e.g. a goroutine, add the `go` keyword before the function call.\n\n```go\nfunc PrintMessage(message string) {\n    fmt.Println(message)\n}\n\nfunc main() {\n    go PrintMessage(\"Learning Go!\")\n    fmt.Println(\"Goodbye!\")\n}\n```\n\n</br>\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n## TRY IT OUT\n\n![Rob Pike](../../images/rob-pike.png)\n\n</br>\n\n### Exercise: Explore goroutines\n\n> Change the `PrintMessage` function to print a message 5 times.\n\n> Print two additional messages in the `main` function using the `PrintMessage` function.\n\n> Turn the calls to `PrintMessage` into goroutines.\n\n</br>\n\n> **Question:** What is the output?\n\n> **Consider:** How do you know when each goroutine has finished?\n\n</br>\n</br>\n","slug":"goroutines","title":"Goroutines","section":"Go fundamentals","icon":"code","filePath":"/home/runner/work/itu-bds-sdse/itu-bds-sdse/lessons/04-golang-fundamentals/R-goroutines.md","nextSlug":"/itu-bds-sdse/lessons/golang-fundamentals/channels","prevSlug":"/itu-bds-sdse/lessons/golang-fundamentals/defining-interfaces"}},"__N_SSG":true}