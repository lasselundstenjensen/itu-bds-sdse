{"pageProps":{"post":{"attributes":{"title":"Inheritance","description":"We look at inheritance vs composition","keywords":["Software engineering","Data science","Go","Lasse Lund Sten Jensen"]},"html":"<h1>Inheritance</h1>\n<p>Inheritance implements an <strong>&quot;is-a&quot;</strong> relationship. It allows a class to inherit the properties and methods of another class.</p>\n<ul>\n<li>The class that inherits is called the <strong>subclass</strong> or <strong>child class</strong>.</li>\n<li>The class that is inherited from is called the <strong>superclass</strong> or <strong>parent class</strong>.</li>\n</ul>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<p><img src=\"../../images/lessons/notes-on-object-oriented-programming/parent-child-class.png\" alt=\"Inheritance\"></p>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Animal</span>:\n\n    <span class=\"hljs-comment\"># attribute and method of the parent class</span>\n    name = <span class=\"hljs-string\">&quot;&quot;</span>\n    \n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">eat</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;I can eat&quot;</span>)\n\n<span class=\"hljs-comment\"># inherit from Animal</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Dog</span>(<span class=\"hljs-title class_ inherited__\">Animal</span>):\n\n    <span class=\"hljs-comment\"># new method in subclass</span>\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">display</span>(<span class=\"hljs-params\">self</span>):\n        <span class=\"hljs-comment\"># access name attribute of superclass using self</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;My name is &quot;</span>, self.name)\n</code></pre><pre><code class=\"hljs language-python\"><span class=\"hljs-comment\"># create an object of the subclass</span>\nlabrador = Dog()\n\n<span class=\"hljs-comment\"># access superclass attribute and method </span>\nlabrador.name = <span class=\"hljs-string\">&quot;Darth Vader&quot;</span>\nlabrador.eat()\n\n<span class=\"hljs-comment\"># call subclass method </span>\nlabrador.display()\n</code></pre></br>\n</br>\n\n<p><strong>Output:</strong></p>\n<pre><code class=\"hljs language-text\">I can eat\nMy name is  Darth Vader\n</code></pre></br>\n</br>\n\n<p><strong>Overriding the <code>eat()</code> method and calling the superclass method:</strong></p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-comment\"># call method of superclass</span>\n<span class=\"hljs-built_in\">super</span>().eat()\n</code></pre></br>\n</br>\n\n<p>Source: <a href=\"https://www.programiz.com/python-programming/inheritance\">https://www.programiz.com/python-programming/inheritance</a></p>\n</br>\n</br>\n","markdown":"\n# Inheritance\n\nInheritance implements an **\"is-a\"** relationship. It allows a class to inherit the properties and methods of another class.\n\n- The class that inherits is called the **subclass** or **child class**.\n- The class that is inherited from is called the **superclass** or **parent class**.\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n![Inheritance](../../images/lessons/notes-on-object-oriented-programming/parent-child-class.png)\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n```python\nclass Animal:\n\n    # attribute and method of the parent class\n    name = \"\"\n    \n    def eat(self):\n        print(\"I can eat\")\n\n# inherit from Animal\nclass Dog(Animal):\n\n    # new method in subclass\n    def display(self):\n        # access name attribute of superclass using self\n        print(\"My name is \", self.name)\n```\n\n```python\n# create an object of the subclass\nlabrador = Dog()\n\n# access superclass attribute and method \nlabrador.name = \"Darth Vader\"\nlabrador.eat()\n\n# call subclass method \nlabrador.display()\n```\n\n</br>\n</br>\n\n**Output:**\n\n```text\nI can eat\nMy name is  Darth Vader\n```\n\n</br>\n</br>\n\n**Overriding the `eat()` method and calling the superclass method:**\n\n```python\n# call method of superclass\nsuper().eat()\n```\n\n</br>\n</br>\n\nSource: https://www.programiz.com/python-programming/inheritance\n\n</br>\n</br>\n","slug":"inheritance","title":"Inheritance","section":"Object Oriented Programming","icon":"info-circle","filePath":"/home/runner/work/itu-bds-sdse/itu-bds-sdse/lessons/02-notes-on-object-oriented-programming/B-inheritance.md","nextSlug":"/itu-bds-sdse/lessons/notes-on-object-oriented-programming/what-about-oo-in-go","prevSlug":"/itu-bds-sdse/lessons/notes-on-object-oriented-programming/quick-overview"}},"__N_SSG":true}