{"pageProps":{"post":{"attributes":{"title":"Multi-platform and common use cases"},"html":"<h1>Multi-platform</h1>\n<ul>\n<li>Can generate executable binary files for different platforms and operating systems</li>\n<li>Compiles to WebAssembly (WASM)</li>\n<li>Transpiles to JavaScript (GopherJS)</li>\n</ul>\n<p><a href=\"https://gist.github.com/asukakenji/f15ba7e588ac42795f421b48b8aede63\">Compatibility</a> with different platforms (unofficially).</p>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h1>Common use cases</h1>\n<ul>\n<li>Command Line Interface (CLI) tools</li>\n<li>Microservices</li>\n<li>Web servers</li>\n<li>Backend code</li>\n<li>DevOps/MLOps</li>\n<li>Glue code</li>\n</ul>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h1>Can Go be used for Machine Learning?</h1>\n<p>Yes, but it depends for what. Python is the most popular language for Machine Learning.</p>\n<p>Several reasons for this, but the main one is the number of libraries and frameworks available for Python and lack of <a href=\"https://blog.jetbrains.com/go/2023/06/22/does-machine-learning-in-go-have-a-future/\">basic support in Go for e.g. CUDA and math/statistics libraries</a>.</p>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<p>Go is powerful when it comes to preprocessing, data cleaning, and manipulating large amounts of data.</p>\n<p>It is in large due to its speed and concurrency model:</p>\n<ul>\n<li>High concurrency</li>\n<li>High performance</li>\n<li>Suitable for real-time AI applications</li>\n<li>Suitable for data processing, big data, and data streaming</li>\n<li>Great cloud support through libraries</li>\n<li>Efficient use of resources, fast cold start</li>\n</ul>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h2>ML Go specific libraries</h2>\n<ul>\n<li>Natural Language Processing (NLP) <code>go-nlp</code></li>\n<li>Computer Vision <code>gocv</code>, with CUDA support</li>\n</ul>\n<p><img src=\"../../images/lessons/golang-introduction/gocv-logo.png\" alt=\"gocv\"></p>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n<h2>Libraries and frameworks</h2>\n<p>Some <a href=\"https://github.com/avelino/awesome-go?tab=readme-ov-file\">inspiration</a>.</p>\n</br>\n</br>","markdown":"\n# Multi-platform\n\n- Can generate executable binary files for different platforms and operating systems\n- Compiles to WebAssembly (WASM)\n- Transpiles to JavaScript (GopherJS)\n\n[Compatibility](https://gist.github.com/asukakenji/f15ba7e588ac42795f421b48b8aede63) with different platforms (unofficially).\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Common use cases\n\n- Command Line Interface (CLI) tools\n- Microservices\n- Web servers\n- Backend code\n- DevOps/MLOps\n- Glue code\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Can Go be used for Machine Learning?\n\nYes, but it depends for what. Python is the most popular language for Machine Learning.\n\nSeveral reasons for this, but the main one is the number of libraries and frameworks available for Python and lack of [basic support in Go for e.g. CUDA and math/statistics libraries](https://blog.jetbrains.com/go/2023/06/22/does-machine-learning-in-go-have-a-future/).\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\nGo is powerful when it comes to preprocessing, data cleaning, and manipulating large amounts of data.\n\nIt is in large due to its speed and concurrency model:\n\n- High concurrency\n- High performance\n- Suitable for real-time AI applications\n- Suitable for data processing, big data, and data streaming\n- Great cloud support through libraries\n- Efficient use of resources, fast cold start\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n## ML Go specific libraries\n\n- Natural Language Processing (NLP) `go-nlp`\n- Computer Vision `gocv`, with CUDA support\n\n![gocv](../../images/lessons/golang-introduction/gocv-logo.png)\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n## Libraries and frameworks\n\nSome [inspiration](https://github.com/avelino/awesome-go?tab=readme-ov-file).\n\n</br>\n</br>","slug":"multi-platform-and-common-use-cases","title":"Multi-platform and common use cases","section":"The Go Programming Language","icon":"code","filePath":"/home/runner/work/itu-bds-sdse/itu-bds-sdse/lessons/03-golang-introduction/K-multi-platform-and-common-use-cases.md","nextSlug":"/itu-bds-sdse/lessons/golang-fundamentals/the-basics","prevSlug":"/itu-bds-sdse/lessons/golang-introduction/stuff-to-install"}},"__N_SSG":true}